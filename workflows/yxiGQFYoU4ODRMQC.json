{
  "active": false,
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Send message and wait for response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file1": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Send message and wait for response1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Send a photo message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Send a photo message": {
      "main": [
        [
          {
            "node": "Get a file1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Send message and wait for response": {
      "main": [
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send message and wait for response1": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-30T20:06:27.927Z",
  "id": "yxiGQFYoU4ODRMQC",
  "isArchived": false,
  "meta": null,
  "name": "4.0 Product Marketing- UGC Generator",
  "nodes": [
    {
      "parameters": {
        "jsCode": "// Get the base64 string from the specific path\nlet base64String = $input.first().json.choices[0].message.images[0].image_url.url;\n\n// Remove the data URI prefix if it exists\nif (base64String.startsWith('data:image/')) {\n  // Find the comma that separates the prefix from the actual base64 data\n  const commaIndex = base64String.indexOf(',');\n  if (commaIndex !== -1) {\n    base64String = base64String.substring(commaIndex + 1);\n  }\n}\n\nreturn [{\n  json: {\n    base64_data: base64String\n  }\n}];"
      },
      "id": "a95b1d38-e1fd-473e-9a96-31c8dc7775fb",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "position": [
        -2000,
        832
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64_data",
        "options": {
          "fileName": "generated_image",
          "mimeType": "image/png"
        }
      },
      "id": "d67b0fef-c49b-434d-abe4-eba90efed0a5",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "position": [
        -1776,
        832
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openRouterApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"google/gemini-2.5-flash-image-preview\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"{{ $('Send message and wait for response').item.json.data.text }}. Photoréaliste pour une publicité UGC. ratio 1:1.\"\n        },\n        {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": \"https://api.telegram.org/file/bot{{ $('Edit Fields').item.json.telegram_token }}/{{ $json.result.file_path }}\"\n          }\n        }\n      ]\n    }\n  ]\n  \n}",
        "options": {}
      },
      "id": "e1658454-209a-43ab-b3a2-79f2f023a65a",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -2224,
        832
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "54dcd985-a7de-4106-81b4-c2ae5b31234b",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        -2240,
        608
      ],
      "webhookId": "c578267b-4fca-49f6-a52f-bd354bd4e4f4",
      "executeOnce": false,
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "daaeed7f-da2b-4c9a-a33e-d78c619e93cc",
              "name": "telegram_token",
              "type": "string",
              "value": "Your Telegram Token"
            }
          ]
        },
        "options": {}
      },
      "id": "8a05f61b-a4c4-4c75-bd05-47cccd88cf29",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "position": [
        -1984,
        608
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "message": "Merci d'avoir téléchargé l'image. Veuillez fournir vos instructions.",
        "responseType": "freeText",
        "options": {}
      },
      "id": "e40c736c-f27a-4a19-9e0a-f1d75a548ab4",
      "name": "Send message and wait for response",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -1744,
        608
      ],
      "webhookId": "4ee08df4-d0e9-4d2f-81f9-d7e38d9b17cb",
      "typeVersion": 1.2,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $('Telegram Trigger').item.json.message.photo[2].file_id }}",
        "download": false
      },
      "id": "672d1931-5cd1-4f82-a163-5723f0ba68bd",
      "name": "Get a file",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -1520,
        608
      ],
      "webhookId": "13857ee5-781f-4e1c-9416-aad416df72ac",
      "typeVersion": 1.2,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "binaryData": true,
        "additionalFields": {}
      },
      "id": "5ec03985-f78d-4e88-95b5-c70a20d63864",
      "name": "Send a photo message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -1520,
        832
      ],
      "webhookId": "22be872e-27aa-420b-be32-265ca6271a49",
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "message": "Veuillez fournir une idée de dialogue pour votre annonce.",
        "responseType": "freeText",
        "options": {}
      },
      "id": "f0466481-4dee-4c95-8d37-3bae7bb8bae3",
      "name": "Send message and wait for response1",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -704,
        496
      ],
      "webhookId": "1739c0ea-8542-41df-8717-694446f2196d",
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here is what I am looking for: {{ $json.data.text }}\n\nHere is the content of the initial image that will be used to generate the video:\n{{ $('HTTP Request3').item.json.choices[0].message.content }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=You are an expert in creating scripts for authentic UGC-style advertisements that feel natural and unscripted.\nYour task is to create a two-segment video script based on the user's concept. The video starts with the provided image.\nCRITICAL CONSTRAINTS:\n\nDO NOT add objects not present in the original image (no food, accessories, tools, etc.).\nDO NOT remove objects that are in the original image.\nThe person should only interact with objects/elements visible in the source image.\nActions must be physically possible given the person's starting position and environment.\nNo additional text or captions\nREQUIREMENTS:\nEach segment should be 7-8 seconds of realistic action/dialogue.\nInclude camera movements when they enhance storytelling (zoom in, pan, tilt, etc.).\nActions must be specific and filmable.\nDialogue should sound conversational and unscripted.\nShow don't tell - actions should visually demonstrate product benefits.\nUse single quotes for any dialogue.\nStay authentic - avoid overly promotional language\nThe image context will be provided to guide what is actually visible and possible.\nOutput format:\n{\n\"segment-1\": \"[camera movement if needed] + [specific action using only visible elements] + [natural dialogue if any]\",\n\"segment-2\": \"[camera movement if needed] + [specific action using only visible elements] + [natural dialogue if any]\"\n}\nExample camera movements: camera slowly zooms in, camera pans left to right, camera tilts up, camera pulls back\nExample constrained actions: adjusts visible strap, shifts weight on visible surface, turns toward camera, gestures with free hand"
            }
          ]
        },
        "batching": {}
      },
      "id": "a5f73615-c0c3-4da4-93d0-db1f2f369859",
      "name": "Basic LLM Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        -1072,
        752
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "claude-sonnet-4-20250514",
          "cachedResultName": "Claude 4 Sonnet"
        },
        "options": {}
      },
      "id": "18d1433b-750f-4eee-ae78-e7ab74be4294",
      "name": "Anthropic Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "position": [
        -1184,
        912
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\"segment-1\": \"the man tugs his sleeve and describes how elastic the fabric is\",\n\"segment-2\": \"the man raises his arms to stretch, and the shirt flows with his movements\"\n}"
      },
      "id": "d4d3ef97-2f7e-445f-9528-7e37327da459",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        -832,
        928
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "fieldToSplitOut": "output",
        "options": {}
      },
      "id": "d44578f0-237b-4f7c-bb82-5d0e5479f600",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        -688,
        752
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.kie.ai/api/v1/veo/generate",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "specifyBody": "=json",
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "jsonBody": "={\n  \"prompt\": \"{{ $json.output }}\",\n  \"imageUrls\": [\n    \"https://api.telegram.org/file/bot{{ $('Edit Fields').item.json.telegram_token }}/{{ $('Get a file1').item.json.result.file_path }}\"\n  ],\n  \"model\": \"veo3_fast\",\n  \"aspectRatio\": \"16:9\",\n  \"seeds\": 12345,\n  \"enableFallback\": false\n} ",
        "options": {}
      },
      "id": "eaafc5e0-7822-4fc6-ba88-8b353208e8b3",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -272,
        624
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.result.photo[3].file_id }}",
        "additionalFields": {}
      },
      "id": "5ea6b2b9-69d0-4d3d-8f35-171a437a1aa1",
      "name": "Get a file1",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -1104,
        496
      ],
      "webhookId": "2bc7bf68-ed5a-41e8-a377-c971fcbf7dd2",
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "amount": 60
      },
      "id": "b6cde536-c1fb-45a3-aa15-f3d0727f778c",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        -64,
        624
      ],
      "webhookId": "41f3bf3a-fc54-4162-99c9-2b37a06adcb0",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "url": "https://api.kie.ai/api/v1/veo/record-info",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "taskId",
              "value": "={{ $json.data.taskId }}"
            }
          ]
        },
        "options": {}
      },
      "id": "70eea47c-90bc-4074-844f-829764b971ae",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        144,
        624
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "data.response.resultUrls"
            }
          ]
        },
        "options": {}
      },
      "id": "6d45d7fb-db47-4c87-a771-1f194b8788d0",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        592,
        576
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "02e778ea-5f11-4d0f-8d66-ab57cac7e35b",
      "name": "Merge video",
      "type": "n8n-nodes-mediafx.mediaFX",
      "position": [
        784,
        576
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "sendVideo",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "binaryData": true,
        "additionalFields": {}
      },
      "id": "28aece30-1bb7-4a01-b64a-e8da22ba8bd8",
      "name": "Send a video",
      "type": "n8n-nodes-base.telegram",
      "position": [
        976,
        576
      ],
      "webhookId": "bce3aa2c-b445-40a7-a9e1-36388cbb33e9",
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "f29a6ac3-9fb2-44a7-ba55-b1b82b42b0bd",
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.data.successFlag }}",
                    "rightValue": 1
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Success"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "490fc789-6e8c-423e-b13e-7b1610aa79e9",
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.data.successFlag }}",
                    "rightValue": 0
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "In Process"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "b69490f8-08ef-4026-8ecd-b9628db57ba6",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "position": [
        336,
        608
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "=La génération de la vidéo a échoué",
        "additionalFields": {}
      },
      "id": "0491e246-c52d-4ced-95c6-82ac1cc022f6",
      "name": "Send a text message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        592,
        768
      ],
      "webhookId": "e00c2c2c-533f-4ca4-bd03-3a7760f2524f",
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openRouterApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"google/gemini-2.5-flash-image-preview\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"Fournissez une description détaillée du contenu de l'image. Le cadre, le(s) sujet(s), ce que le sujet fait ou tient, etc.\"\n        },\n        {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": \"https://api.telegram.org/file/bot{{ $('Edit Fields').item.json.telegram_token }}/{{ $json.result.file_path }}\"\n          }\n        }\n      ]\n    }\n  ]\n  \n}",
        "options": {}
      },
      "id": "12b4c91d-fd2b-497c-a787-e90b7f9012eb",
      "name": "HTTP Request3",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -912,
        496
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "content": "## Generate Image",
        "height": 512,
        "width": 1024
      },
      "id": "2ad72988-2224-420b-bd6d-d01ef261e0c2",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2336,
        496
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Video Generation Prompts",
        "height": 576,
        "width": 832,
        "color": 4
      },
      "id": "27fa400a-5d0a-46c6-a95e-816bef5af63b",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1264,
        448
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Generate and output video",
        "height": 512,
        "width": 1616
      },
      "id": "82b68b5f-fcce-4f43-b2d5-86d05f727ac5",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -384,
        496
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Nano Banana 🍌 + VEO3 Fast UGC Generator by Growth Ai",
        "color": 7
      },
      "id": "52ef4e53-6e4e-4bcc-a8cc-ca4c17946d97",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -960,
        192
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Phase 1: Image Reception and Enhancement\n\n## What you do:\n\nSend your image on Telegram (product photo, sketch, anything)\nType your instructions when the bot prompts you\n\nExample: \"Professional advertising style\" or \"Improve lighting\"\n\n## What the system does:\n\n\nAnalyzes your image with Gemini AI\nGenerates an optimized version in square format (1:1)\nSends back the enhanced image ready for video\n\n## Result:\n\n✅ Professional quality image in seconds\n✅ Photorealistic style perfect for advertising\n✅ Format optimized for social media",
        "height": 528,
        "width": 768,
        "color": 3
      },
      "id": "963fdf56-2f95-4b91-90f0-7dfb5501f777",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2240,
        1088
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Phase 2: Analysis and Script Creation\n\n## What you do:\n\nGive your dialogue idea when the bot asks you\nExample: \"Talk about product benefits\" or \"Satisfied customer testimonial\"\n\n## What the system does:\n\n2. Analyzes the image in detail (objects present, person's position, environment)\n3. Combines your idea with visual analysis\n4. Generates a script in 2 segments of 7-8 seconds each with Claude AI\n5. Respects realistic constraints (no added objects, only possible actions)\n\n## Result:\n\n✅ Video script ready to film in 2 parts\n✅ Natural and authentic dialogue\n✅ Achievable actions with what's visible in the image",
        "height": 512,
        "width": 768,
        "color": 3
      },
      "id": "fd7a4cb6-2fe6-494b-a8e4-6dfe7cbd9335",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1232,
        1088
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Phase 3: Video Generation\n\n## What you do:\n\nNothing! Just wait for the magic to happen\n\n## What the system does:\n\n2. Generates 2 distinct videos with VEO3 (one per script segment)\n3. Checks generation status every 10 seconds\n4. Merges the 2 segments into one fluid video\n5. Sends you the final video on Telegram\n\n## In case of problems:\n\nIf generation fails → Automatic error message\nIf it takes too long → The system automatically re-checks\n\n## Result:\n\n✅ Complete UGC video in vertical format (9:16)\n✅ Cinematic quality with VEO3\n✅ Ready to publish on TikTok, Instagram, YouTube Shorts",
        "height": 608,
        "width": 768,
        "color": 3
      },
      "id": "775905f2-2716-4ea1-a3db-be09a308c5b0",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        48,
        1088
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Phase 0: Initialization and Prerequisites\n\n## What you need to configure:\n\n### 1. Required Accounts and APIs:\n\nTelegram Bot: Create a bot via @BotFather\nOpenRouter: Account with access to Gemini 2.5 Flash\nAnthropic: Claude 4 Sonnet API\nKIE.AI: Access to VEO3 Fast\nN8N: Instance to host the workflow\n\n### 2. Credentials to configure in N8N:\n\ntelegramApi: Your Telegram bot token\nopenRouterApi: OpenRouter API key\nanthropicApi: Anthropic API key\nhttpBearerAuth: KIE.AI token for VEO3\n\n### 3. Final Configuration:\n\nTelegram Token: To replace in the \"Edit Fields\" node\nWebhook: Configure the Telegram bot URL\nTest: Verify that all services respond\n\n## Result:\n\n✅ Automation ready to receive your images\n✅ All services connected and functional\n✅ 24/7 operational workflow",
        "height": 816,
        "width": 592,
        "color": 5
      },
      "id": "79809c5d-f32c-490f-916c-363f1dbbdd07",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2960,
        384
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Need more advanced automation solutions? Contact us for custom enterprise workflows!\n\n# Growth-AI.fr\n\n## https://www.linkedin.com/in/allanvaccarizi/\n## https://www.linkedin.com/in/hugo-marinier-%F0%9F%A7%B2-6537b633/",
        "height": 336,
        "width": 816
      },
      "id": "bcfe0d90-f62f-4d6b-89be-88ca5eac8263",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-30T20:06:27.937Z",
      "updatedAt": "2025-09-30T20:06:27.937Z",
      "role": "workflow:owner",
      "workflowId": "yxiGQFYoU4ODRMQC",
      "projectId": "ANrIPEPOHOX0fwPW"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-30T20:07:25.000Z",
  "versionId": "6d436d8c-eadf-4013-add1-5280ff4a6c4a"
}