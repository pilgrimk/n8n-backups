{
  "active": true,
  "connections": {
    "Markdown": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Create a document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search for a post in Reddit": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create a document": {
      "main": [
        [
          {
            "node": "Update a document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update a document": {
      "main": [
        [
          {
            "node": "Search records",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message": {
      "main": [
        [
          {
            "node": "Create a record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search records": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-09T00:29:29.793Z",
  "id": "cPNm1QQ5Upts29Ks",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "3.0 Product Marketing- Strategic Marketing Agent",
  "nodes": [
    {
      "parameters": {
        "content": "## 6. Prepare & Send Final Briefing\nThis final section converts the AI's report into a beautiful HTML email and attaches the VoC Anaylsis document.\n\n**Configuration:**\n1.  **Google Drive Node:** Select your Google Drive credentials.\n2.  **Gmail Node:** Select your Gmail credentials and change the `To` field to your own email address.\n3.  **Content System** Add result to our Airtable database for content processing.",
        "height": 740,
        "width": 832,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1824,
        0
      ],
      "id": "2f45d167-c4c6-432a-a2ce-747b9376ee82",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## 5. Generate Strategic Brief (\"The Architect\")\nThis second AI agent analyzes the research and your products to write your weekly marketing strategy.\n\n**Configuration:**\n1.  **Basic LLM Chain Node:** The `System` message can be customized if you want a different report structure.\n2.  **GPT 4.1 Node:** Add your OpenAI API credentials.",
        "height": 740,
        "width": 320,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1488,
        0
      ],
      "id": "06e0590c-0572-478d-9ba4-1f58e3b6c139",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## 4. Get Product Catalog\nThis section reads your product information from a Google Sheet.\n\n**Configuration:**\n1.  **Airtable:** Select all records from your `Product Catalog` table.\n2.  The `Aggregate` node requires no setup.",
        "height": 740,
        "width": 340
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1120,
        0
      ],
      "id": "f973e6ee-1280-426b-9f76-50009ef8f7db",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## 3. Save VoC Analysis to Google Docs\nThese nodes create a new Google Doc and save the raw research data from the AI Agent into it.\n\n**Configuration:**\n1.  **Create Doc Node:** Select your Google Docs credentials and choose a Drive folder for your reports.\n2.  For help setting up Google credentials, see the [n8n Docs](https://docs.n8n.io/integrations/builtin/credentials/google/oauth-single-service/#finish-your-n8n-credential).",
        "height": 740,
        "width": 340,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        768,
        0
      ],
      "id": "190b49c4-9670-486a-ad27-aa8c8b393591",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## 2. VoC Analysis Agent (\"The Signal\")\nThis AI Agent researches Reddit to understand your customers.\n\n**Configuration:**\n1.  **AI Agent Node:** Double-click to open the `System Prompt`. In the **CONTEXT** section, replace the demo brand details with your own.\n2.  **GPT 4.1-mini Node:** Add your OpenAI API credentials. [Get Key](https://platform.openai.com/api-keys)\n3.  **Reddit Search Node:** Add your Reddit App credentials. [Create App](https://www.reddit.com/prefs/apps)",
        "height": 740,
        "width": 540,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        208,
        0
      ],
      "id": "bcfa3964-06fa-476b-b875-f7d4011c0355",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## 1. Workflow Triggers\nThis automation runs on a schedule. **Double-click** the `Schedule Trigger` to set the day and time you want to receive your weekly strategy. Use the `Manual Trigger` below for testing.",
        "height": 740,
        "width": 260,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -80,
        0
      ],
      "id": "b012c732-64bb-437d-9834-0a6466117421",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "mode": "markdownToHtml",
        "markdown": "={{ $json.text }}",
        "options": {}
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        1888,
        352
      ],
      "id": "bd695de7-161a-40fd-94a5-ca2d4e97bf55",
      "name": "Markdown"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1632,
        528
      ],
      "id": "5d1441cf-6b1d-4508-8817-70fb1f73d79f",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "q3gPWSga9sOawaqA",
          "name": "OpenAi API Key- KAP Enterprises"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Product Catalog: {{ JSON.stringify($json['Product Catalog']) }}, \nVoice of Customer Analysis: {{ $('AI Agent').item.json.output }}\nDate: {{ $now.toFormat('dd LLLL yyyy') }}",
        "messages": {
          "messageValues": [
            {
              "message": "You are \"The Architect,\" a world-class AI Marketing Strategist. Your sole function is to analyze the provided market intelligence and product data for a specific business, and then produce a clear, decisive, and actionable weekly marketing briefing.\n\n\nYour Guiding Principles:\n\n\nBe a Consultant, Not a Summarizer: Synthesize data into sharp, non-obvious insights.\n\n\nConnect Logic to Emotion: Always link Pains and Desires to their deeper UnderlyingFears and Aspirations.\n\n\nBe Data-Driven: Justify your conclusions by citing the source ID from the data (e.g., P02, F01).\n\n\nBe Vigilant: Your role is to spot every opportunity, threat, and shift in the market landscape.\n\n\nYOUR PROCESS:\n\n\nAnalyze the provided Voice of Customer Analysis JSON object.\n\n\nAnalyze the provided Product Catalog JSON object.\n\n\nInfer the company/brand name from the provided data to use in the briefing title.\n\n\nPerform Strategic Analysis & Gap Identification: This is your core task. Systematically compare the market data to the product data to identify:\n\n\nProduct-Market Fit (\"The #1 Opportunity\"): Find the single biggest customer Pain Point that one of the company's products perfectly solves. You must explain why it's the biggest by linking it to a core UnderlyingFear (F-ID).\n\n\nMarket Gap Analysis (\"The Missing Piece\"): Identify the most valuable unmet StatedDesire. Connect this gap to a powerful emotional driver (Fear or Aspiration ID).\n\n\nIdentify Key Threats (\"What Could Hurt Us\"): Look for rising competitor mentions (brand_words), strong CommonObjections that target the product category, or growing negative sentiment.\n\n\nIdentify Market Shifts (\"What's Changing\"): Look for new StatedDesires, changing customer priorities, or new product_words gaining traction that indicate a change in consumer behavior.\n\n\nConstruct the Briefing: Generate a complete marketing briefing in Markdown format using the detailed structure below. You must generate multiple, varied creative ideas for the marketing directives.\n\n\nCONSTRAINTS:\n\n\nFormat the entire briefing using Markdown syntax. Use ## for main headings, ### for subheadings, text for bolding, and * for bullet points.\n\n\nDo not include any conversational text, introductions, or explanations. Your output must begin directly with the Markdown title.\n\n\nThe tone should be authoritative, clear, and strategic.\n\n\nAll recommendations must be directly derived from the provided data. Do not invent information.\n\n\nWhen you state a Pain, Desire, or Fear, you MUST cite its ID in parentheses (e.g., P02, F01).\n\n\nOUTPUT FORMAT & EXAMPLE\n\n\nYour final output must be a single, complete Markdown string formatted exactly like this example.\nWeekly Strategic Briefing: [Inferred Company/Brand Name]\n\n\nGenerated: {Current Date}\nExecutive Summary\n\n\nThe single biggest opportunity this week is to leverage our [Specific Product Name] to solve the market's most severe pain point: [Specific, Quantified Pain Point (e.g., \"Usability Issues (P01) driven by the fear of wasted time (F03)\")]. Our core strategic angle will be \"[Generated Angle using Customer Lexicon]\", promising relief from their most hated experiences like \"[pain_word]\" and \"[pain_word]\".\nMarket Gap Analysis\n\n\nAnalysis reveals a critical market gap driven by the [Underlying Fear or Aspiration (e.g., \"the aspiration for expert status (A02)\")]. Customers repeatedly demand [Specific Desired Feature (e.g., \"advanced customization options (D04)\")], using words like \"[desire_word]\" and \"[desire_word]\" to express this unmet need. No current product fully addresses this.\nStrategic Threats & Market Shifts\n\n\nEmerging Threat: [Describe the key threat, e.g., \"Competitor X is frequently praised for its [Specific Feature], directly challenging our position.\"] This is evidenced by [cite specific brand mentions or objections].\n\n\nMarket Shift: [Describe the key shift, e.g., \"There is a growing demand for [New Product Category/Feature] over traditional solutions.\"] This is indicated by [cite specific desires or pain points showing this trend].\n\n\nKey Insights from the Market's Voice\n\n\n Top Pain Point: [Summarized Pain Theme] - [One-sentence description, citing ID].\n\n\nTop Desire: [Summarized Desire Theme] - [One-sentence description, citing ID].\n\n\nKey Objection: [Summarized Objection Theme] - [One-sentence description, citing ID].\n\n\nActionable Directives\nFor Marketing & Copywriting (Multi-Angle Attack):\n\n\nCampaign Angles (Choose One):\n\n\nAngle A (Emotion-Focused): \"[Creative campaign angle based on a Fear or Aspiration]\".\n\n\nAngle B (Benefit-Focused): \"[Creative campaign angle based on a specific product benefit]\".\n\n\nDirect-Response Hooks (Use Everywhere):\n\n\nEmail Subject 1: \"[Subject line targeting a specific pain word, e.g., 'Tired of confusing interfaces?']\".\n\n\nEmail Subject 2: \"[Subject line targeting a specific desire word, e.g., 'Finally. A tool that's actually easy to use.']\".\n\n\nSocial Hook: \"[Short, punchy question for a Reel or Short, e.g., 'Is your current software causing headaches?']\".\n\n\nAd Copy Snippet: \"[Short phrase for ad copy using lexicon, e.g., 'No more complexity. No more frustration. Just results.']\".\n\n\nContent Marketing Ideas (Build Trust):\n\n\nGuide Idea: \"[Title of a guide addressing a key confusion point, e.g., 'The Beginner's Guide to [Product Category]: [Option A] vs. [Option B] (P-ID)']\".\n"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        1520,
        352
      ],
      "id": "8f271aa1-8c00-4705-af14-80c81c389098",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "Product Catalog",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1344,
        352
      ],
      "id": "585f0342-824a-432f-be47-11fa5bb080dd",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        400,
        528
      ],
      "id": "81682d2d-503e-4d31-98a6-71613251f678",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "q3gPWSga9sOawaqA",
          "name": "OpenAi API Key- KAP Enterprises"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Let's go!",
        "options": {
          "systemMessage": "=ROLE\n\nYou are the “Market Signal” Agent. Your sole function is to act as a rigorous, objective market research analyst. You perform a weekly, comprehensive analysis of fresh customer conversations and deliver a single, structured JSON object representing the raw, evidence-backed voice of the market.\n\nCONTEXT\n\nYou are the intelligence-gathering arm for KAP Enterprises, an AI automation solutions company focused on delivering affordable, AI-driven automation solutions using no-code tools like Make.com, n8n and Airtable. The company caters specifically to SMBs in various industries, helping them:\n\n* Automate customer relationship management (CRM)\n* Generate and schedule social media content\n* Manage cold email campaigns\n* Automate video content creation\n* Streamline customer service\n\nYour work is the foundational truth upon which all marketing strategy is built.\n\nMission: To capture the authentic \"what\" and \"why\" of customer sentiment by analyzing real user conversations.\n\nForbidden: You must never provide opinions, advice, strategy, or creative direction. Your output is pure, synthesized data.\n\nTASK\n\nInput: NONE. You operate autonomously on a weekly schedule.\nOutput: A single, strictly structured customer_voice_profile.json object.\n\nInstructions:\n\nFormulate a DIVERSE Research Plan: Your first step is to devise a multi-pronged research plan. You must use your Reddit Search tool a minimum of 10 times to gather a wide, unbiased sample of conversations.\n\nCRITICAL: Your search queries must be varied to get a complete view of the market. Do not over-index on a single problem. Mix up your searches with:\n\nBroad, Short-Tail Queries: Use simple terms like AI automation, AI-powered workflows, AI tools for business, automated CRM systems, business automation software.\n\nProblem-Oriented Queries: Search for common issues like AI automation integration issues, AI tools for inefficient workflows, Automation for repetitive tasks, Fixing AI automation errors, Troubleshooting automation systems.\n\nGoal-Oriented, Long-Tail Queries: Search for user goals like Best AI automation for small businesses, AI automation to improve business processes, Implementing AI for sales automation, Using AI to automate customer service, AI tools for streamlining business operations.\n\nYour queries should reflect what a real customer would search for, not business jargon.\n\nTo search within a specific community, prepend your query with subreddit:CommunityName (e.g., \"subreddit:automate automation\").\n\nExecute the Research Plan: Call the Reddit Search tool sequentially for each of the 10+ query strings in your plan, collecting all the results.\n\nSynthesize Findings from Key Fields:\n\nIMPORTANT: When you receive the JSON object for each post from the tool, you MUST only pay attention to the title, selftext, and subreddit fields. Ignore all other data.\n\nBase your entire analysis and response exclusively on the content of these three fields.\n\nAnalyze the complete set of conversations to identify and enumerate distinct examples for each section of the final JSON output: CorePains, UnderlyingFears, StatedDesires, DeeperAspirations, CommonObjections, and CustomerLexicon.\n\nAssign & Link IDs: Assign consistent, unique IDs to each pain (P01...) and desire (D01...) for downstream use.\n\nMaintain Objectivity: Use only direct, customer-sourced language for quotes. Do not paraphrase or editorialize.\n\nTOOL INSTRUCTIONS\n\nTool: RedditSearch.search(query: string) → array of post objects\n\nReturn Object Fields to Use: Each post object in the array will contain many fields. You must ONLY use title, selftext, and subreddit for your analysis. Disregard all other fields like score, author, etc.\n\nProcedure:\n\nDevise your multi-step research plan by creating a list of 10+ varied, natural language search query strings.\n\nFor each query string in your plan, call RedditSearch.search(query).\n\nHold the title, selftext, and subreddit from all returned post objects in your memory for a final, holistic analysis.\n\nAfter all searches are complete, structure the synthesized results precisely according to the TASK.\n\nOUTPUT FORMAT\n\n(The JSON output format remains identical, as it is the correct target schema.)\n\nGenerated json\n{\n  \"CorePains\": [ { \"id\": \"P01\", \"theme\": \"...\", ... } ],\n  \"UnderlyingFears\": [ { \"id\": \"F01\", \"theme\": \"...\", ... } ],\n  \"StatedDesires\": [ { \"id\": \"D01\", \"theme\": \"...\", ... } ],\n  \"DeeperAspirations\": [ { \"id\": \"A01\", \"theme\": \"...\", ... } ],\n  \"CommonObjections\": [ { \"id\": \"O01\", \"theme\": \"...\", ... } ],\n  \"CustomerLexicon\": { \"pain_words\": [], \"desire_words\": [], ... }\n}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        432,
        352
      ],
      "id": "d95d20ac-53c3-4dc2-9020-7a79eb3ac882",
      "name": "AI Agent"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -16,
        448
      ],
      "id": "e77d5715-e97f-4cf0-b3e6-2c95d5032dad",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -16,
        272
      ],
      "id": "7728e11b-eac9-4138-8059-e5c48ce22197",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "search",
        "location": "allReddit",
        "keyword": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Keyword', ``, 'string') }}",
        "limit": 10,
        "additionalFields": {
          "sort": "hot"
        }
      },
      "type": "n8n-nodes-base.redditTool",
      "typeVersion": 1,
      "position": [
        624,
        528
      ],
      "id": "86fd9ea7-7231-454c-b16d-2e61ffc9e9d5",
      "name": "Search for a post in Reddit",
      "credentials": {
        "redditOAuth2Api": {
          "id": "xPRJ3c6LGWMJ1CP6",
          "name": "Reddit OAuth2"
        }
      }
    },
    {
      "parameters": {
        "folderId": "10EN7TwxIT_JZzI4uemBUhXSx14Fd0pqH",
        "title": "={{ $now.toFormat('dd LLLL yyyy') }} Voice of Customer Analysis"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        800,
        352
      ],
      "id": "5a947b5b-05c9-4f50-a8c7-79f61de3c4e6",
      "name": "Create a document",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "hzFT67OZLaV4fRRs",
          "name": "Google Docs- pilgrimka1@gmail"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentURL": "={{ $json.id }}",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "={{ $('AI Agent').item.json.output }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        960,
        352
      ],
      "id": "a07bab3a-dafc-427d-83bf-5e5271ebd9e9",
      "name": "Update a document",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "hzFT67OZLaV4fRRs",
          "name": "Google Docs- pilgrimka1@gmail"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Create a document').item.json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2064,
        352
      ],
      "id": "5fad41cb-ada2-4106-86d3-778c66f32716",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "PBtBKOv2ofju7FVt",
          "name": "Google Drive- OAuth2- pilgrimka1@gmail"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ $('Edit Fields').first().json.sendToEmail }}",
        "subject": "=Weekly Go-to-Market Directive - {{ $now.toFormat('dd LLLL yyyy') }}",
        "message": "={{ $('Markdown').item.json.data }}",
        "options": {
          "appendAttribution": false,
          "attachmentsUi": {
            "attachmentsBinary": [
              {}
            ]
          }
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        2240,
        352
      ],
      "id": "3ec29878-9072-43f1-9fca-428bf1266ee7",
      "name": "Send a message",
      "webhookId": "4939cecb-c0d1-4a0d-8bf0-3844efd38686",
      "credentials": {
        "gmailOAuth2": {
          "id": "5Y9wNFS6LeDTwIMn",
          "name": "Gmail OAuth2- pilgrimka1@gmail"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"sendToEmail\": \"pilgrimka1@yahoo.com\",\n  \"summaryPostRecordId\": \"recd5AZPzzMSkllex\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        240,
        352
      ],
      "id": "9565e762-fe33-4e93-96ba-c73de6024f39",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appNaZuD2Vmu01qh8",
          "mode": "list",
          "cachedResultName": "Content System",
          "cachedResultUrl": "https://airtable.com/appNaZuD2Vmu01qh8"
        },
        "table": {
          "__rl": true,
          "value": "tblj7jvA9yXzslpYv",
          "mode": "list",
          "cachedResultName": "Content",
          "cachedResultUrl": "https://airtable.com/appNaZuD2Vmu01qh8/tblj7jvA9yXzslpYv"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Active": false,
            "System/ Hidden": false,
            "Copy": "={{ $('Markdown').item.json.text }}",
            "Actions": "=[ \"{{ $('Edit Fields').first().json.summaryPostRecordId }}\" ]"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Active",
              "displayName": "Active",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "boolean",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Actions",
              "displayName": "Actions",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Copy",
              "displayName": "Copy",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Summary Post",
              "displayName": "Summary Post",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Media Posts",
              "displayName": "Media Posts",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Images",
              "displayName": "Images",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Videos",
              "displayName": "Videos",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Last Modified",
              "displayName": "Last Modified",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Blog",
              "displayName": "Blog",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Video Public URL",
              "displayName": "Video Public URL",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "SRT",
              "displayName": "SRT",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Action Name (from Transformation Actions)",
              "displayName": "Action Name (from Transformation Actions)",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "ID (from Transformation Actions)",
              "displayName": "ID (from Transformation Actions)",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Webhook URL (from Transformation Actions)",
              "displayName": "Webhook URL (from Transformation Actions)",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Media Posts Available",
              "displayName": "Media Posts Available",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Images API",
              "displayName": "Images API",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "recordId",
              "displayName": "recordId",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Requires Long Term Image",
              "displayName": "Requires Long Term Image",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Posts Needing LTI",
              "displayName": "Posts Needing LTI",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Long Term Images",
              "displayName": "Long Term Images",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Num Images",
              "displayName": "Num Images",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Count LTI",
              "displayName": "Count LTI",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "LTI Difference",
              "displayName": "LTI Difference",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Created",
              "displayName": "Created",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Image Panel",
              "displayName": "Image Panel",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Response Webhook URL (from Actions)",
              "displayName": "Response Webhook URL (from Actions)",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Value (from Actions)",
              "displayName": "Value (from Actions)",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "System/ Hidden",
              "displayName": "System/ Hidden",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "boolean",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        2432,
        352
      ],
      "id": "6980570c-127c-4bb2-b292-41870fbbcf85",
      "name": "Create a record",
      "credentials": {
        "airtableTokenApi": {
          "id": "KfRycBsXYTyRWuPv",
          "name": "Airtable Personal Access Token"
        }
      }
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appNaZuD2Vmu01qh8",
          "mode": "list",
          "cachedResultName": "Content System",
          "cachedResultUrl": "https://airtable.com/appNaZuD2Vmu01qh8"
        },
        "table": {
          "__rl": true,
          "value": "tblVEkLpC4c84fo2y",
          "mode": "list",
          "cachedResultName": "Product Catalog",
          "cachedResultUrl": "https://airtable.com/appNaZuD2Vmu01qh8/tblVEkLpC4c84fo2y"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1184,
        352
      ],
      "id": "c8971efb-ce43-4173-859c-31863f0fa331",
      "name": "Search records",
      "credentials": {
        "airtableTokenApi": {
          "id": "KfRycBsXYTyRWuPv",
          "name": "Airtable Personal Access Token"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-07-09T00:29:29.804Z",
      "updatedAt": "2025-07-09T00:29:29.804Z",
      "role": "workflow:owner",
      "workflowId": "cPNm1QQ5Upts29Ks",
      "projectId": "ANrIPEPOHOX0fwPW"
    }
  ],
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-10-14T17:05:22.000Z",
  "versionId": "7c3c26a3-e9aa-4750-ad3f-af7b5a8bda5a"
}