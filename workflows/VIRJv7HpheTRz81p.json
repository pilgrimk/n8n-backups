{
  "active": false,
  "connections": {
    "workflow_trigger": {
      "main": [
        [
          {
            "node": "Set Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gemini-2.5-pro": {
      "ai_languageModel": [
        [
          {
            "node": "write_prd",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "write_prd": {
      "main": [
        [
          {
            "node": "Parse JSON Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Variables": {
      "main": [
        [
          {
            "node": "write_prd",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse JSON Result": {
      "main": [
        [
          {
            "node": "Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Markdown": {
      "main": [
        [
          {
            "node": "Convert to PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to PDF": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Get PDF File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "set_result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get PDF File": {
      "main": [
        [
          {
            "node": "Upload PDF File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload PDF File": {
      "main": [
        [
          {
            "node": "set_result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-10-23T21:57:48.626Z",
  "id": "VIRJv7HpheTRz81p",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "3.0 Web Developer Agent - Write Website PRD",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "website_content"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        -32
      ],
      "id": "c0246421-c6ad-41f0-b6ed-08ba6a189314",
      "name": "workflow_trigger"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# ROLE AND GOAL\nYou are an expert Product Manager and UX/UI Designer specializing in website redesigns. Your primary expertise is in translating existing website content into actionable, modern, and comprehensive Product Requirements Documents (PRDs). This PRD will serve as a detailed text prompt for an AI website builder like Lovable.dev to generate a complete, production-ready website.\n\n# CONTEXT\nI have scraped an existing website and have the content in Markdown format. This content includes headings, text, lists, and image descriptions. The goal is to redesign this website, not just replicate it. You must analyze the provided content, infer the site's structure and purpose, and then create a PRD that outlines a modern, clean, and user-friendly version of the site.\n\n# CRITICAL INSTRUCTIONS\n1.  **Analyze and Infer:** Do not just copy the content. Analyze the structure (what looks like a hero, a feature list, a testimonial section, a footer, etc.). Infer the target audience and the primary goal of the website (e.g., lead generation, e-commerce, portfolio, informational).\n2.  **Modernize the Structure:** Propose a standard, modern layout. This includes a clear navigation bar, a compelling hero section, logical content flow, a strong call-to-action (CTA), and a comprehensive footer. If the original structure is confusing, fix it.\n3.  **Define a Visual Style:** Based on the content, suggest a suitable `Tone of Voice` and a `Visual Aesthetic`. Propose a simple, modern color palette (e.g., Primary, Secondary, Accent, Neutral) and font pairing (e.g., one for headings, one for body text).\n4.  **Format as a Lovable.dev Prompt:** The entire output MUST be a single, well-formatted PRD. Use Markdown for clear structure. The format should be page-by-page, section-by-section, as detailed below.\n5. Where possible try to suggest using a Single Page Application (SPA) solution.\n6. Recommend React and Tailwind unless otherwise specified.\n\n# REQUIRED OUTPUT FORMAT EXAMPLE (PRD for Lovable.dev)\n\n## Project Title\n*   Derive an appropriate title for the project\n\n## Project Overview\n*   **Website Goal:** [Infer the primary purpose of the site, e.g., \"To generate qualified leads for a local plumbing business.\"]\n*   **Target Audience:** [Describe the ideal visitor, e.g., \"Homeowners and property managers in the Anytown area experiencing plumbing issues.\"]\n*   **Tone of Voice:** [e.g., \"Professional, trustworthy, and helpful.\"]\n\n## Global Styles & Branding\n*   **Visual Aesthetic:** [e.g., \"Clean, modern, and professional with a focus on trust and reliability.\"]\n*   **Color Palette:**\n    Provide a modern, clean color palette if one is not provided, for instance:\n    *   Primary: [e.g., \"#005A9C\" (Trustworthy Blue)]\n    *   Secondary: [e.g., \"#F1F1F1\" (Light Gray)]\n    *   Accent: [e.g., \"#F9A825\" (Action Yellow)]\n    *   Text: [e.g., \"#333333\" (Dark Gray)]\n*   **Typography:**\n    Provide a modern, clean typogrpahy if one is not provided, for instance:\n    *   Headings: [e.g., \"Poppins, sans-serif\"]\n    *   Body: [e.g., \"Lato, sans-serif\"]\n\n## Page-by-Page Breakdown\n\n### Page: Home\n*   **Objective:** To instantly communicate the value proposition, build trust, and guide users to key services or the contact page.\n*   **Sections:**\n    1.  **Navigation Bar:** [List nav links, e.g., Home, Services, About Us, Blog, Contact Us. Include a \"Get a Free Quote\" CTA button.]\n    2.  **Hero Section:**\n        *   **Content:** [Use the main H1 and tagline from the scraped content. If missing, create one. e.g., Headline: \"Reliable Plumbing Services When You Need Them Most\", Sub-headline: \"24/7 emergency service for Anytown residents. Licensed and insured.\", CTA Button: \"Schedule Service Now\"]\n        *   **Visuals:** [Suggest a relevant background image, e.g., \"A clean, professional photo of a plumber working or a branded company van.\"]\n    3.  **Services Overview Section:**\n        *   **Content:** [Use the list of services from the scraped content. Present as a 3-column card layout. Each card should have an icon, service name, and a short description.]\n        *   **Functionality:** Each card should link to the corresponding detailed service page.\n    4.  **\"Why Choose Us\" Section:**\n        *   **Content:** [Extract key trust-building points like \"Licensed & Insured\", \"20+ Years Experience\", \"Upfront Pricing\". Present with checkmark icons.]\n    5.  **Testimonials Section:**\n        *   **Content:** [Format scraped testimonials into a slider or card layout. Include the quote, customer name, and location.]\n    6.  **Contact CTA Section:**\n        *   **Content:** [A final, compelling call to action. e.g., Headline: \"Ready to Fix Your Plumbing Problem?\", Button: \"Get Your Free Estimate\"]\n    7.  **Footer:** [Create a comprehensive footer with Nav Links, Contact Info (Address, Phone, Email), and Social Media Links.]\n\n# OUTPUT JSON FORMAT\nOutput your results using the following JSON format\n{\n  \"title\": \"Derived Title of the PRD Document\",\n  \"text\": \"Text content of the PRD document\"\n}\n\n---\n\n# WEBSITE CONTENT TO ANALYZE\n\n{{ $('workflow_trigger').item.json.website_content }}",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        448,
        -32
      ],
      "id": "440d84f6-920f-4368-a160-63e8e6e09c1c",
      "name": "write_prd"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        528,
        208
      ],
      "id": "5719a8f1-d3c8-4945-85da-b72dfd6fc7b1",
      "name": "gemini-2.5-pro",
      "credentials": {
        "googlePalmApi": {
          "id": "bq8ncPZLi1sTGrGQ",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a69c32b2-a6fe-40b7-96c1-64f5020d99e6",
              "name": "prd_result",
              "value": "={{ $('Parse JSON Result').first().json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2160,
        -16
      ],
      "id": "b80a6a64-71c2-45cb-a566-1751378c6711",
      "name": "set_result"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.pdf.co/v1/pdf/convert/from/html",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $('Set Variables').item.json.pdfCoApiKey }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ $json.data }}"
            },
            {
              "name": "name",
              "value": "={{ $json.filename }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1248,
        -32
      ],
      "id": "6bdc5c42-b783-4051-825f-220ff2ff1f3b",
      "name": "Convert to PDF"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "caa5b1cb-229b-43c3-987f-66c4719afdff",
              "name": "pdfCoApiKey",
              "value": "pilgrimka1@yahoo.com_IyYDcwgD9wud6Hbf9ZMTzhk9y4IgpQx9gq4Q1qll4M5oqkyDb7HcFrgiwfZJrd8k",
              "type": "string"
            },
            {
              "id": "8cc665d3-61ea-487b-bdaf-0e6e7ff6972c",
              "name": "prdFolderId",
              "value": "1kzujRDRGaT-YLlaAFmKh4H8kMA0xTHR_",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        -32
      ],
      "id": "4ba1aee3-2469-4eb6-9b14-f098df47df25",
      "name": "Set Variables"
    },
    {
      "parameters": {
        "jsCode": "// Get the raw response text\nconst item = $input.item.json;\n\n// Validate the structure\nif (!item.text) {\n  throw new Error('No \"text\" field found in input item.');\n}\n\nlet rawText = item.text;\n\n// Remove markdown code fences (```json ... ```)\nrawText = rawText\n  .replace(/```json\\s*/gi, '')\n  .replace(/```/g, '')\n  .trim();\n\nlet parsedJson;\ntry {\n  parsedJson = JSON.parse(rawText);\n} catch (error) {\n  throw new Error(`Failed to parse JSON from LLM output. Raw text was:\\n${rawText}\\nError: ${error.message}`);\n}\n\n// --- Create Filename Based on Title ---\nif (!parsedJson.title) {\n  throw new Error('Parsed JSON does not contain a \"title\" field required to build filename.');\n}\n\nlet baseName = parsedJson.title;\n// Remove all non-alphanumeric characters (including spaces)\nbaseName = baseName.replace(/[^a-zA-Z0-9]/g, '');  // Keeps only letters and numbers\n\n// Generate simplified date: YYYYMMDD\nconst now = new Date();\nconst yyyy = now.getFullYear();\nconst mm = String(now.getMonth() + 1).padStart(2, '0'); // Months are 0-based\nconst dd = String(now.getDate()).padStart(2, '0');\n\nconst dateStamp = `${yyyy}${mm}${dd}`;\n\n// Final filename\nconst filename = `${baseName}_${dateStamp}.pdf`;\n\n// Return parsed JSON with filename attached\nreturn {\n  json: {\n    ...parsedJson,\n    filename\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        -32
      ],
      "id": "86286876-e196-4ef1-8164-76dc43cc09e9",
      "name": "Parse JSON Result"
    },
    {
      "parameters": {
        "mode": "markdownToHtml",
        "markdown": "={{ $json.text }}",
        "options": {}
      },
      "type": "n8n-nodes-base.markdown",
      "typeVersion": 1,
      "position": [
        1024,
        -32
      ],
      "id": "c5578ccd-2690-425e-9092-1536cf1354ff",
      "name": "Markdown"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a737cb3b-0efa-4f91-bbb3-9d9b8091c7b4",
              "leftValue": "={{ $json.status }}",
              "rightValue": 200,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1472,
        -32
      ],
      "id": "be7cb7ef-22e2-4cb7-852b-8819e34488ae",
      "name": "If"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1696,
        -192
      ],
      "id": "8ef5015f-5599-419e-8c04-2bff5a601006",
      "name": "Get PDF File"
    },
    {
      "parameters": {
        "name": "={{ $('Parse JSON Result').item.json.filename }}",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "={{ $('Set Variables').item.json.prdFolderId }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1904,
        -192
      ],
      "id": "bb9681e0-3655-484a-8e86-0d1fbe1d1212",
      "name": "Upload PDF File",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "PBtBKOv2ofju7FVt",
          "name": "Google Drive- OAuth2- pilgrimka1@gmail"
        }
      }
    }
  ],
  "pinData": {
    "workflow_trigger": [
      {
        "json": {
          "website_content": "# Mike Weed Pest Control Professional\n\n## Business Information\n\n**Phone:** 850-712-0481\n**Email:** MikeWeed1958@gmail.com\n**Website:** https://mikeweed.com/\n\n## Social Media\n\n*   [Facebook](https://www.facebook.com/MikeWeedPestControl/)\n*   [LinkedIn](https://www.linkedin.com/in/mike-weed-a-c-e-5b2b364a/)\n*   [Pinterest](https://www.pinterest.com/mikeweedpestcontrol/)\n*   [Yelp](https://www.yelp.com/biz/mike-weed-pest-control-pace)\n*   [YouTube](https://www.youtube.com/channel/UCimb8g_p_AD_a-yJp3d2RjA)\n\n## Certifications\n\n*   Certified in Alabama, Florida, & Georgia\n\n## Main Content\n\n### Professional Pest Control for Your Home or Lawn\n\nWith over 45 years of experience, Mike Weed is your trusted professional for pest control.\n\n**Contact Now**\n\n### Mike Weed, A.C.E., Entomologist\n\nMike Weed is an Associate Certified Entomologist, a title held by less than 2% of pest control operators in the industry. This certification is a testament to his deep knowledge and expertise, ensuring you receive the highest quality service.\n\n**Background & Experience:**\n\n*   45+ years in the pest control industry\n*   St. Regis Paper Company: Pest Control Tech (1978-1980)\n*   Orkin Pest Control: Branch Manager (1980-1996)\n*   Cook's Pest Control: District Manager (1996-2009)\n*   Self-Employed (2009-Present)\n\n### Our Services\n\nWe offer a comprehensive range of pest control solutions to protect your home and lawn.\n\n### Service Request or Question\n\nPlease provide your details below, and we will get back to you shortly.\n\n*   Name\n*   Email\n*   Phone\n*   Your Message\n\n**Submit**\n\n*This site is protected by reCAPTCHA and the Google Privacy Policy and Terms of Service apply.*\n\n### Connect with Us\n\nFollow us on our social media channels to stay updated.\n\n---\n*Copyright 2024 Mike Weed. All rights reserved.*\n*Website by Gulf Coast Local*"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-10-23T21:57:48.631Z",
      "updatedAt": "2025-10-23T21:57:48.631Z",
      "role": "workflow:owner",
      "workflowId": "VIRJv7HpheTRz81p",
      "projectId": "ANrIPEPOHOX0fwPW"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-24T20:21:25.000Z",
  "versionId": "212b37af-9168-430c-ade3-aa1b88f764c5"
}