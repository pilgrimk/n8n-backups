{
  "active": false,
  "connections": {
    "n8n Form Trigger": {
      "main": [
        [
          {
            "node": "Set Values",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Final article text": {
      "main": [
        [
          {
            "node": "Editor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Research Leader üî¨": {
      "main": [
        [
          {
            "node": "Project Planner",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Project Planner",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Delegate to Research Assistants": {
      "main": [
        [
          {
            "node": "Research Assistant",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Research Assistant": {
      "main": [
        [
          {
            "node": "Merge Text",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Project Planner": {
      "main": [
        [
          {
            "node": "Delegate to Research Assistants",
            "type": "main",
            "index": 0
          },
          {
            "node": "Generate Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Perplexity API": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Editor": {
      "main": [
        [
          {
            "node": "Extract Title",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Perplexity API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Research Leader üî¨",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Project Planner",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Editor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Perplexity_Tool": {
      "ai_tool": [
        [
          {
            "node": "Research Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Research Assistant",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Generate Image": {
      "main": [
        [
          {
            "node": "Encode Credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Text": {
      "main": [
        [
          {
            "node": "Merge Text and Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Text and Image": {
      "main": [
        [
          {
            "node": "Final article text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload to Cloudinary": {
      "main": [
        [
          {
            "node": "Cloudinary Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encode Credentials": {
      "main": [
        [
          {
            "node": "Upload to Cloudinary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cloudinary Image": {
      "main": [
        [
          {
            "node": "Merge Text and Image",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Extract Title": {
      "main": [
        [
          {
            "node": "Convert to PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Values": {
      "main": [
        [
          {
            "node": "Research Leader üî¨",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to PDF": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-24T03:23:40.193Z",
  "id": "cYKgDzLfjcrQyUzL",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Deep Research",
  "nodes": [
    {
      "parameters": {
        "jsCode": "let title = $input.first().json.title;\nlet imageUrl = $('Cloudinary Image').first().json.imageUrl;\nlet article = \"\";\n\n// Introduction\narticle += $('Project Planner').first().json.output.introduction;\n\nfor (const item of $input.all()) {\n  article += \"<strong>\" + item.json.title + \"</strong>\";\n  article += item.json.output;\n  article += \"<br>\";\n}\n\n// Conclusions\narticle += \"<strong> Conclusions </strong>\";\narticle += $('Project Planner').first().json.output.conclusions;\n\n\nreturn [\n  {\n    \"title\": title,\n    \"article\": article,\n    \"imageUrl\": imageUrl\n  }\n];"
      },
      "id": "4b57719a-7def-4aeb-8958-2da3e0218c74",
      "name": "Final article text",
      "type": "n8n-nodes-base.code",
      "position": [
        860,
        1120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "path": "94898bed-2b33-4236-bcfe-e06c6365c991",
        "formTitle": "Topic Researcher",
        "formDescription": "Provides in depth report on topic",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Topic",
              "placeholder": "Effective parenting methods",
              "requiredField": true
            },
            {
              "fieldLabel": "Tone",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Professional"
                  },
                  {
                    "option": "Causal"
                  },
                  {
                    "option": "Witty"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "Number of words",
              "placeholder": "1000",
              "requiredField": true
            },
            {
              "fieldLabel": "Email Address",
              "fieldType": "email",
              "placeholder": "you@example.com",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "id": "1101f182-17ca-4413-b069-bdda0f2dada7",
      "name": "n8n Form Trigger",
      "type": "n8n-nodes-base.formTrigger",
      "position": [
        -360,
        120
      ],
      "webhookId": "94898bed-2b33-4236-bcfe-e06c6365c991",
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "content": "## Research Leader üî¨\nBuild table of contents\n\n",
        "height": 429,
        "width": 398,
        "color": 7
      },
      "id": "f0355705-0e84-4bdc-b769-a7f2c0d085ae",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Plan the work and Delegate to writers üìÖ\n",
        "height": 431,
        "width": 637,
        "color": 7
      },
      "id": "086f2dbf-7305-4b22-a03e-0a4702e3dccd",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        440,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Team of Research Assistants  ‚úçÔ∏è\nEach Assistant works on a chapter",
        "height": 434,
        "width": 817,
        "color": 7
      },
      "id": "46377724-6ae3-44e2-9b1f-580797a4f81d",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        820,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Editor polishing draft üìù ",
        "height": 429,
        "width": 691,
        "color": 7
      },
      "id": "788f74bb-da9e-4145-bf43-53f5fcedbdcc",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        820,
        960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Publish to Email üì∞\nCould also send to PDF",
        "height": 429,
        "width": 442,
        "color": 7
      },
      "id": "5c9a2a5a-03f6-4057-ba68-b55e3010a59c",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1560,
        960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Topic to research: {{ $('n8n Form Trigger').item.json.Topic }}",
        "options": {
          "systemMessage": "=You are Research Leader specialized in comprehensive topic analysis, research and content structuring. Your task is to create an enriched, research-backed table of contents for a given topic. \n\nFollow these steps:\n1. Analyze the provided topic thoroughly.\n\n2. Conduct web research to gather current insights, trends, and expert perspectives on the topic.\n\n3. Synthesize the gathered information to identify:\n   - Core concepts and principles\n   - Current trends and developments\n   - Expert opinions and best practices\n   - Real-world applications and examples\n   - Potential challenges and solutions\n\n4. Create a comprehensive table of contents that:\n   - Reflects both foundational knowledge and current developments\n   - Incorporates relevant case studies and examples\n   - Addresses common questions and concerns\n   - Includes practical applications and future implications\n\n5. Structure the content hierarchically, ensuring:\n   - Logical flow and progression\n   - Clear relationships between sections\n   - Balanced coverage of theoretical and practical aspects\n   - Integration of research-backed insights\n\nPlease format your response as follows:\n\nTopic Analysis:\n[Brief overview of the topic and its significance based on current research]\n\nKey Research Insights:\n- [Insight 1 from web research]\n- [Insight 2 from web research]\n- [Insight 3 from web research]\n\nProposed Table of Contents:\n\nI. Introduction\n   A. Topic Overview and Current Relevance\n   B. Key Trends and Developments\n   C. Why This Matters Now\n\nII. Background and Context\n    A. Historical Development\n    B. Fundamental Concepts\n    C. Current State of the Field\n\nIII. [Main Theme 1 from Research]\n     A. [Key Finding/Aspect]\n     B. [Expert Perspectives]\n     C. [Real-world Applications]\n\nIV. [Main Theme 2 from Research]\n    A. [Key Finding/Aspect]\n    B. [Case Studies]\n    C. [Practical Implications]\n\n[Continue with additional research-based sections]\n\nIX. Future Perspectives\n    A. Emerging Trends\n    B. Potential Developments\n    C. Recommendations\n\nX. Conclusion\n   A. Summary of Key Insights\n   B. Actionable Takeaways\n   C. Final Thoughts\n\nResearch Sources:\n[List of key sources consulted]\n\nUsage Instructions:\n1. Provide a specific topic you want to analyze\n2. Based on the research, it will generate a comprehensive, current, and well-structured table of contents\n3. Each section will be enriched with recent findings and expert insights\n4. The final structure will be suitable for various content formats (blog posts, articles, whitepapers)\n\nToday's date is {{ $now }}"
        }
      },
      "id": "fcfdc063-e0dd-4583-a390-b816f58731af",
      "name": "Research Leader üî¨",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        80,
        120
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"subtitle\": {\n      \"type\": \"string\"\n    },\n    \"introduction\": {\n      \"type\": \"string\"\n    },\n    \"conclusions\": {\n      \"type\": \"string\"\n    },\n    \"imagePrompt\": {\n      \"type\": \"string\"\n    },\n    \"chapters\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"prompt\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"title\",\n          \"prompt\"\n        ]\n      }\n    }\n  },\n  \"required\": [\n    \"subtitle\",\n    \"introduction\",\n    \"conclusions\",\n    \"imagePrompt\",\n    \"chapters\"\n  ]\n}"
      },
      "id": "b2bc4ce6-45da-4f4e-9f8b-f9944f014951",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        720,
        300
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.chapters",
        "options": {}
      },
      "id": "2e6ace16-90bb-47e4-bce3-244f5c666a3d",
      "name": "Delegate to Research Assistants",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        880,
        120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Write a chapter for the article: {{ $('Project Planner').item.json.output.subtitle }}\n\nWrite the chapter titled {{ $('Delegate to Research Assistants').item.json.title }} that {{ $('Delegate to Research Assistants').item.json.prompt }}.\n\nMake sure to include citations in the final output.  They are provided by the perplexity_ai_search tool\n\n\n",
        "options": {
          "systemMessage": "=You are a dedicated Research Assistant AI agent, working as part of a research team under the guidance of a Research Leader and Project Planner. Your task is to write a chapter in the as part of the overall research into a topic.\n\nGuidelines:\n- Just return the plain text for each chapter (no JSON structure).\n- Use the Perplexity_Tool tool to research the topic in the chapter\n- Use html format for output\n- Don't add internal titles or headings.\n- The length of each chapther should be around {{ Math.round($('n8n Form Trigger').item.json['Number of words'] / $('Project Planner').item.json.output.chapters.length) }} words long\n- Go deep in the topic you treat, don't just throw some superficial info\n{{ $itemIndex > 0 ? \"- The previous chapter talks about \" + $input.all()[$itemIndex-1].json.title : \"\" }}\n{{ $itemIndex > 0 ? \"- The promt for the previous chapter is \" + $input.all()[$itemIndex-1].json.prompt : \"\" }}\n{{ $itemIndex < $input.all().length ? \"- The following chapter will talk about \" + $input.all()[$itemIndex+1].json.title: \"\" }}\n{{ $itemIndex < $input.all().length ? \"- The prompt for the following chapter is \" + $input.all()[$itemIndex+1].json.prompt : \"\" }}\n- Consider the previous and following chapters what writing the text for this chapter. The text must be coherent with the previous and following chapters.\n- This chapter should not repeat the concepts already exposed in the previous chapter.\n- This chapter is a part of a larger article so don't include an introduction or conclusions. This chapter should merge with the rest of the article.\n- Please write in a style that is {{ $('n8n Form Trigger').item.json.Tone }}\n- Please use the perplexity online tool as source of information to use to write the chapter\n- Make sure to include citations from the Perplexity_Tool tool in your writing\n\nCitation Guidelines:\n- Use the Perplexity_Tool tool to gather information and cite sources\n- For each major claim or piece of information, include a hyperlinked inline citation\n- Format citations as HTML links with descriptive text:\n  <a href=\"[URL]\">[Source: Publication Name]</a>\n  Examples of proper citation format:\n  - \"According to recent data <a href=\"https://www.mckinsey.com/article-url\">[Source: McKinsey & Company]</a>...\"\n- When directly quoting from a source, use quotation marks and include the citation\n- Integrate citations naturally into the flow of the text without disrupting readability\n- Ensure all cited information is relevant and supports the chapter's main points\n- Verify that citations are accurate and come directly from the Perplexity_Tool results\n- Balance cited content with original analysis and synthesis\n- When citing statistics or specific data points, include the year if available in the citation\n\n\nContent Integration:\n- Smoothly blend cited information with original analysis\n- Use transitions to connect cited material with your own insights\n- Maintain the specified tone while incorporating citations\n- Ensure citations support rather than dominate the narrative\n- Use a mix of paraphrasing and direct quotes when citing sources\n\nSources Section Requirements:\n- At the end of your chapter, include a \"Sources\" section\n- Format the sources section as follows:\n\n<hr>\n<h3>Sources</h3>\n<ul>\n<li><a href=\"[URL]\">[Publication Name] - [Article Title]</a></li>\n[Additional sources...]\n</ul>\n\nSource List Guidelines:\n- List each unique source used in your chapter\n- Include the full URL from the Perplexity_Tool results\n- Order sources alphabetically by publication name\n- Include article titles when available\n- Each source should only appear once in the list\n- Ensure all URLs are functional and properly formatted\n- Include all sources referenced in your in-text citations\n- Match source names exactly as used in in-text citations\n\nExample Source Entry:\n<li><a href=\"https://www.mckinsey.com/article-path\">McKinsey & Company - The Future of AI in Business</a></li>\n\nQuality Control:\n- Verify that every in-text citation has a corresponding entry in the Sources section\n- Check that all URLs are complete and accurate\n- Ensure consistency between in-text citation names and source list entries\n- Confirm all cited information is relevant and supports the chapter's main points\n- Balance cited content with original analysis and synthesis\n\nAvailable Tools: Perplexity_Tool\n- Purpose: Used to conduct web research\n- Required Input Fields:\n  `prompt`: Prompt to be used for the Perplexity search\n  `topic`: The topic to be analyzed\n\n\nToday's date is : {{ $now }}"
        }
      },
      "id": "bc3f222d-85a9-4c9e-a896-0d4548cb99fc",
      "name": "Research Assistant",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        860,
        580
      ],
      "retryOnFail": true,
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Write the title, the subtitle, the chapters details, the introduction, the conclusions, and an image prompt for an SEO-friendly article.  \n\nPlease use this set of topics to create chapters:\n{{ $json.output }}\n\n\nInstructions:\n- Place the article title in a JSON field called `title`\n- Place the subtitle in a JSON field called `subtitle`\n- Place the introduction in a JSON field called `introduction`\n- In the introduction introduce the topic that is then explored in depth in the rest of the text\n- The introduction should be around 150 words\n- Place the conclusions in a JSON field called `conclusions`\n- The conclusions should be around 150 words\n- Use the conclusions to sum all said in the article and offer a conclusion to the reader\n- The image prompt will be used to produce a photographic cover image for the article and should depict the topics discussed in the article\n- Place the image prompt in a JSON field called `imagePrompt`\n- There should be 4 to 10 chapters, enough to provide a detailed analysis of the topic.\n- For each chapter provide a title and an exaustive prompt that will be used to write the chapter text.\n- Place the chapters in an array field called `chapters`\n- For each chapter provide the fields `title` and `prompt`\n- The chapters should follow a logical flow and not repeat the same concepts.\n- The chapters should be one related to the other and not isolated blocks of text. The text should be fluent and folow a linear logic.\n- Don't start the chapters with \"Chapter 1\", \"Chapter 2\", \"Chapter 3\"... just write the title of the chapter\n- For the title and the chapters' titles don't use colons (`:`)\n- For the text, use html format\n- Please write in a style that is {{ $('n8n Form Trigger').item.json.Tone }}\n- Go deep in the topic you treat, don't just throw some superficial info\n\nToday's date is : {{ $now }}",
        "hasOutputParser": true,
        "options": {}
      },
      "id": "e36d7253-2cca-41d2-ad42-463fff2b850a",
      "name": "Project Planner",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        500,
        120
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.perplexity.ai/chat/completions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"sonar\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"{{ $json.prompt }}\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"{{ $json.topic }}\"\n    }\n  ]\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        320,
        1100
      ],
      "id": "40949526-b499-40dc-a31a-00a1a90cf941",
      "name": "Perplexity API",
      "credentials": {
        "httpHeaderAuth": {
          "id": "flnwJJxlk6iNn38f",
          "name": "Perplexity Header Auth"
        }
      }
    },
    {
      "parameters": {
        "content": "## Perplexity\n- Get account from OpenRouter.ai to access Perplexity API\n- Open the Perplexity API node and add in the openrouter credentials\n",
        "height": 434,
        "width": 774,
        "color": 7
      },
      "id": "e80db024-f320-4845-b58a-5de68d1900ff",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "33b7b279-e993-45cf-9e34-37a29a5819ee",
              "name": "response",
              "value": "={{ $json.choices[0].message.content }}\n\nCitations:\n{{ $json.citations }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        560,
        1100
      ],
      "id": "79848ef4-e94e-45ef-89c3-b14e455f9209",
      "name": "Response"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Image: {{ $json.imageUrl }}\n\nArticle to edit: {{ $json.article }}\n\nProvide polished output in html format. ",
        "options": {
          "systemMessage": "=**System Prompt:**\nYou are an expert Editor specializing in refining and polishing content to ensure it meets the highest quality standards. Your role is to review and improve the written material produced by multiple Writers while maintaining academic integrity and proper source attribution. Your task is to provide a highly polished, SEO-optimized article with proper citation management that respects the original content.\n\n**Content Review Instructions:**\n1. Review the content while maintaining its core message and key points.\n2. Fix only clear grammar, spelling, and punctuation errors.\n3. Preserve the original tone and voice.\n4. Ensure content alignment with the original brief.\n5. Make minimal adjustments to sentence structure, focusing only on clarity.\n6. Optimize headlines and subheadings without changing their core meaning.\n\n**Content Preservation Rules:**\n* Never remove substantive content.\n* Maintain all original examples and illustrations.\n* Preserve section ordering.\n* Keep all relevant details and supporting points.\n* Retain nuanced language and specific terminology.\n\n**Citation Management Instructions:**\n1. Preserve all inline citations from the original writers in the format: \\[Source: Publication Name].\n2. Ensure all inline citations are hyperlinked by embedding the publication name in the citation with the corresponding URL. Example: \\[Source: [Publication Name](URL)].\n3. Identify and remove any duplicate citations across different sections.\n4. Standardize citation formats if writers used different styles.\n5. Verify that all cited claims are properly attributed.\n6. Ensure citations don't disrupt the flow of reading.\n7. Cross-reference all inline citations with their corresponding source links.\n\n**Unified Source Documentation Format:**\n* Create ONE \"Sources\" section at the very end of the article (after the Conclusions section).\n* Format each source entry consistently using HTML list items:\n\n<li><a href=\"[URL]\">[Publication Name] - [Article Title]</a></li>\n\n* Include for each source:\n\n  * Publication Name\n  * Article Title (if available)\n  * Complete URL\n  * Date Accessed (if available)\n* Ensure all source entries are hyperlinked properly.\n* Organize all sources alphabetically by publication name.\n* Remove any duplicate entries.\n* Verify all links are functional.\n\n**SEO and Formatting Guidelines:**\n1. Maintain proper HTML formatting throughout.\n2. Ensure citations and hyperlinks don't interfere with keyword optimization.\n3. Format the \"Sources\" section with proper HTML tags.\n4. Use appropriate heading tags (<h1>, <h2>, <h3>) for structure.\n5. Include proper meta descriptions and title tags if required.\n6. Ensure paragraphs are enclosed in `<p>` tags, headers in `<h1>`, `<h2>`, etc., and ensure lists are properly wrapped in `<ul>` or `<ol>` tags.\n\n**Image Usage Instructions:**\n* You will be provided with an image link to be inserted into the article.\n* The image should be placed in a relevant section of the article where it enhances the content and visual appeal.\n* Ensure that the image is added in an aesthetically pleasing way, considering alignment, size, and spacing. The image should be responsive and properly formatted within the HTML structure.\n* Add a suitable caption below the image if necessary.\n* Ensure that the image doesn't disrupt the flow of the article, but complements the content in a meaningful way.\n* Example image tag:\n\n  <img src=\"[IMAGE_URL]\" alt=\"[DESCRIPTION]\" style=\"max-width:100%; height:auto; display:block; margin:auto;\">\n\n**Output Format:**\n* The edited article should be structured as follows:\n\n  * **HTML Document**: Ensure the output document is HTML-ready and includes the necessary structure, like `<html>`, `<head>`, and `<body>` tags.\n  * **Main content**: Properly structured with headings, paragraphs, lists, and embedded citations (hyperlinked).\n  * **The image** integrated into the document in a visually appealing manner, with appropriate tags and styling.\n  * **\"Sources\" section**: Formatted as a proper HTML list at the end of the article with all reference links. There should only be one \"Sources\" section.\n\n**Additional Requirements:**\n* Maintain academic integrity while ensuring readability.\n* Balance SEO optimization with proper citation practices.\n* Ensure all writers' contributions are properly attributed.\n* Preserve the original meaning and intent of cited material.\n* Create smooth transitions between sections from different writers.\n* Ensure proper HTML elements are used for all sections (headings, paragraphs, links, images, etc.).\n* Properly escape any characters that may conflict with HTML (such as quotes, ampersands, etc.).\n\nToday's date is: {{ $now }}"
        }
      },
      "id": "dd1d3868-a422-4776-8f9f-f923bc8bd5a6",
      "name": "Editor",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1040,
        1120
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "prompt"
            },
            {
              "name": "topic"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        80,
        1100
      ],
      "id": "6795e32a-2551-46ce-a6d3-f16c69f18be3",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1180,
        120
      ],
      "id": "88cc2edc-edcd-4b7f-b8dc-0c695370cc9c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "q3gPWSga9sOawaqA",
          "name": "OpenAi API Key- KAP Enterprises"
        }
      }
    },
    {
      "parameters": {
        "content": "## Shared Tools üõ† \n",
        "height": 431,
        "width": 377,
        "color": 7
      },
      "id": "ddb2eabc-0d19-4591-8b8a-d657b1e0bb3b",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1120,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "description": "Useful when conducting research using Perplexity AI online model. When using tool, all string values must be properly escaped, especially for multi-line strings",
        "workflowId": {
          "__rl": true,
          "value": "fJOgBgaHLOrTzcZr",
          "mode": "list",
          "cachedResultName": "Deep Research"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "prompt": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('prompt', ``, 'string') }}",
            "topic": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('topic', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "prompt",
              "displayName": "prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1360,
        120
      ],
      "id": "ed6d81d0-0436-42a0-bb91-7c2055d1853e",
      "name": "Perplexity_Tool"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "claude-3-7-sonnet-20250219",
          "cachedResultName": "Claude 3.7 Sonnet"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        1180,
        300
      ],
      "id": "fdb37670-7f81-430d-bbab-227807e007d2",
      "name": "Anthropic Chat Model",
      "credentials": {
        "anthropicApi": {
          "id": "DBbKMicO5MLFXpAy",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Image Generation üì∑",
        "height": 429,
        "width": 771,
        "color": 7
      },
      "id": "c8c634fb-8ffc-49b8-9d69-871f83f5c1a5",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "image",
        "prompt": "={{ $json.output.imagePrompt }}",
        "options": {
          "dalleQuality": "standard",
          "size": "1024x1024",
          "style": "vivid",
          "returnImageUrls": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        40,
        580
      ],
      "id": "1af6130a-efdc-4cdb-86d1-7cb157bb30ea",
      "name": "Generate Image",
      "credentials": {
        "openAiApi": {
          "id": "q3gPWSga9sOawaqA",
          "name": "OpenAi API Key- KAP Enterprises"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1240,
        580
      ],
      "id": "36fc7b8b-a09c-4407-9023-f828215016aa",
      "name": "Merge Text"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1440,
        700
      ],
      "id": "c6796d11-0724-470e-a1cd-2bb0e950d7d4",
      "name": "Merge Text and Image"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.cloudinary.com/v1_1/{{ $('Set Values').item.json.cloudName }}/image/upload",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Basic {{ $json.base64Credentials }}"
            },
            {
              "name": "Content-Type",
              "value": "multipart/form-data"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "file",
              "value": "={{ $('Generate Image').item.json.url }}"
            },
            {
              "name": "upload_preset",
              "value": "={{ $('Set Values').item.json.uploadPrset }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        420,
        580
      ],
      "id": "7211cb6f-4d1a-46e3-9b1e-8f886c4be548",
      "name": "Upload to Cloudinary"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"assetId\": \"{{ $json.asset_id }}\",\n  \"imageUrl\": \"{{ $json.url }}\",\n  \"byteSize\": {{ $json.bytes }},\n  \"width\": {{ $json.width }},\n  \"height\": {{ $json.height }}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        620,
        720
      ],
      "id": "93d1ceb0-ea14-4f3b-9a90-baed120cc0e3",
      "name": "Cloudinary Image"
    },
    {
      "parameters": {
        "jsCode": "// Initialize base64Credentials as an empty string\nlet base64Credentials = '';\n\n// Retrieve the API credentials (apiKey and apiSecret) from the input\nconst apiKey = $('Set Values').first().json.apiKey;\nconst apiSecret = $('Set Values').first().json.apiSecret;\n\n// Check if the credentials are present\nif (apiKey && apiSecret) {\n  // Combine the API Key and API Secret into a string and Base64 encode it\n  base64Credentials = Buffer.from(`${apiKey}:${apiSecret}`).toString('base64');\n}\n\n// Return the response with both the base64 credentials and image URL\nreturn [\n  {\n    json: {\n      base64Credentials\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        240,
        580
      ],
      "id": "36040a36-7c00-4575-8295-15ac1706d756",
      "name": "Encode Credentials"
    },
    {
      "parameters": {
        "jsCode": "// Get the HTML output from the previous AI agent module\nconst htmlOutput = $input.first().json.output; // Assuming this is the raw HTML output\n\n// Regular expression to match the content inside the <title> tag\nconst match = htmlOutput.match(/<title>(.*?)<\\/title>/);\n\n// Extract the title or use 'Title not found' as default\nconst title = match ? match[1] : 'Title not found';\n\n// Sanitize the title: Remove any character that is not a-z, A-Z, 0-9\nconst sanitizedTitle = title.replace(/[^A-Za-z0-9]/g, '');\n\n// Get the current timestamp in YYYYMMDD_HHmmss format\nconst timestamp = new Date().toISOString().replace(/T/, '_').replace(/:/g, '').split('.')[0];\n\n// Create the PDF file name\nconst pdfFileName = `${sanitizedTitle}_${timestamp}.pdf`;\n\n// Return the title and pdfFileName\nreturn [\n  {\n    json: {\n      title: title,\n      pdfFileName: pdfFileName\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1380,
        1120
      ],
      "id": "0e6d1508-ca1e-45f7-9c49-56e23636c29c",
      "name": "Extract Title"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"cloudName\": \"dvpnvgcop\",\n  \"apiKey\": \"398774853594543\",\n  \"apiSecret\": \"BSJqxs1YxSNWVvHcHPDJX7wBA6Q\",\n  \"uploadPrset\": \"ml_default\",\n  \"pdfCoApiKey\": \"pilgrimka1@yahoo.com_IyYDcwgD9wud6Hbf9ZMTzhk9y4IgpQx9gq4Q1qll4M5oqkyDb7HcFrgiwfZJrd8k\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -140,
        120
      ],
      "id": "6c31ec24-b044-43b3-88a0-df18fba1886e",
      "name": "Set Values"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.pdf.co/v1/pdf/convert/from/html",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "={{ $('Set Values').first().json.pdfCoApiKey }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "html",
              "value": "={{ $('Editor').first().json.output.replace('```html', '').replace('```', '') }}"
            },
            {
              "name": "name",
              "value": "={{ $json.pdfFileName }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1600,
        1120
      ],
      "id": "0b2a5051-7972-45a8-9908-c07cd4090148",
      "name": "Convert to PDF"
    },
    {
      "parameters": {
        "sendTo": "={{ $('n8n Form Trigger').first().json['Email Address'] }}",
        "subject": "={{ $('Extract Title').item.json.title }}",
        "message": "={{ $('Editor').first().json.output.replace('```html', '').replace('```', '') }}\n\n\n<p><a href=\"{{ $json.url }}\">Download your PDF document here!</a></p>",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1800,
        1120
      ],
      "id": "c2fcdf25-ba49-475d-8845-8604eca87669",
      "name": "Send a message",
      "webhookId": "6a8caa19-974a-442a-9119-e59036d4ca66",
      "credentials": {
        "gmailOAuth2": {
          "id": "5Y9wNFS6LeDTwIMn",
          "name": "Gmail OAuth2- pilgrimka1@gmail"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-06-24T03:23:40.202Z",
      "updatedAt": "2025-06-24T03:23:40.202Z",
      "role": "workflow:owner",
      "workflowId": "cYKgDzLfjcrQyUzL",
      "projectId": "ANrIPEPOHOX0fwPW"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-08T23:52:58.000Z",
  "versionId": "3c1636de-0757-4a0e-9138-f7b24de3f7ad"
}